import { ordersClasses } from '@/modules/db/orders'

export function getColumns () {
  return [
    // {
    //   name: '_id',
    //   required: true,
    //   label: '_id',
    //   align: 'left',
    //   field: (row: ordersClasses.IOrder) => row._id,
    //   format: (val: string) => `${val}`,
    //   sortable: false,
    // },
    {
      name: 'date',
      required: true,
      label: 'Date',
      align: 'left',
      field: (row: ordersClasses.IOrder) => row.dto.date,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'group',
      required: true,
      label: 'Group',
      align: 'left',
      field: (row: ordersClasses.IOrder) => row.dto.group,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'title',
      required: true,
      label: 'Title',
      align: 'left',
      field: (row: ordersClasses.IOrder) => row.dto.title,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'price',
      required: true,
      label: 'Price',
      align: 'left',
      field: (row: ordersClasses.IOrder) => row.dto.price,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'amount',
      required: true,
      label: 'Amount',
      align: 'left',
      field: (row: ordersClasses.IOrder) => row.dto.amount,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'vendor',
      required: true,
      label: 'Vendor',
      align: 'left',
      field: (row: ordersClasses.IOrder) => row.dto.vendor,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'seller',
      required: true,
      label: 'Seller',
      align: 'left',
      field: (row: ordersClasses.IOrder) => row.dto.seller,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'link',
      required: true,
      label: 'Link',
      align: 'left',
      field: (row: ordersClasses.IOrder) => row.dto.link,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'markers',
      required: true,
      label: 'Markers',
      align: 'left',
      field: (row: ordersClasses.IOrder) => row.dto.markers,
      format: (val: string[]) => `${val}`,
      sortable: false,
    },
    {
      name: 'actions',
      required: false,
      label: '',
      align: 'left',
      sortable: false,
    },
  ]
}
