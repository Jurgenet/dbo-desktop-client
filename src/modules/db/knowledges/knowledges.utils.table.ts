import { knowledgesDto } from '@/modules/db/knowledges'

export function getColumns () {
  return [
    // {
    //   name: '_id',
    //   required: true,
    //   label: '_id',
    //   align: 'left',
    //   field: (row: knowledgesDto.IKnowledge) => row._id,
    //   format: (val: string) => `${val}`,
    //   sortable: false,
    // },
    {
      name: 'type',
      required: true,
      label: 'Type',
      align: 'left',
      field: (row: knowledgesDto.IKnowledge) => row.type,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'date',
      required: true,
      label: 'Date',
      align: 'left',
      field: (row: knowledgesDto.IKnowledge) => row.date,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'title',
      required: true,
      label: 'Title',
      align: 'left',
      field: (row: knowledgesDto.IKnowledge) => row.title,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'platform',
      required: true,
      label: 'Platform',
      align: 'left',
      field: (row: knowledgesDto.IKnowledge) => row.platform,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'author',
      required: true,
      label: 'Author',
      align: 'left',
      field: (row: knowledgesDto.IKnowledge) => row.author,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'lang',
      required: true,
      label: 'Lang',
      align: 'left',
      field: (row: knowledgesDto.IKnowledge) => row.lang,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'cover',
      required: true,
      label: 'Cover',
      align: 'left',
      field: (row: knowledgesDto.IKnowledge) => row.cover,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'location',
      required: true,
      label: 'Location',
      align: 'left',
      field: (row: knowledgesDto.IKnowledge) => row.location,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'link',
      required: true,
      label: 'Link',
      align: 'left',
      field: (row: knowledgesDto.IKnowledge) => row.link,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'isActive',
      required: true,
      label: 'isActive',
      align: 'left',
      field: (row: knowledgesDto.IKnowledge) => row.isActive,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'isDone',
      required: true,
      label: 'isDone',
      align: 'left',
      field: (row: knowledgesDto.IKnowledge) => row.isDone,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    {
      name: 'isOnline',
      required: true,
      label: 'isOnline',
      align: 'left',
      field: (row: knowledgesDto.IKnowledge) => row.isOnline,
      format: (val: string) => `${val}`,
      sortable: false,
    },
    // {
    //   name: 'markers',
    //   required: true,
    //   label: 'Markers',
    //   align: 'left',
    //   field: (row: knowledgesDto.IKnowledge) => row.markers,
    //   format: (val: string) => `${val}`,
    //   sortable: false,
    // },
    // {
    //   name: 'text',
    //   required: true,
    //   label: 'Text',
    //   align: 'left',
    //   field: (row: knowledgesDto.IKnowledge) => row.text,
    //   format: (val: string) => `${val}`,
    //   sortable: false,
    // },
    {
      name: 'actions',
      required: false,
      label: '',
      align: 'left',
      sortable: false,
    },
  ]
}
